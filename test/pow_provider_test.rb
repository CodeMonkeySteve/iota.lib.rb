require "test_helper"

class PowTest < Minitest::Test
  def setup
    @pow_provider = IOTA::Crypto::PowProvider.new
  end

  def test_that_digest_works
    trytes
    expected_hash = "QLMNETEZDOYSBQLRPRJIZNRRDZ9EKY9LCOLNIDQEZNUFWOVYR9SJLBCVIJWIOKGNPMPGWYTNFMOW99999"

    start = Time.now
    # generate the correct transaction hash
    hash = @pow_provider.digest(trytes)
    puts "Digest time: #{(Time.now - start) * 1000.0}ms"

    assert expected_hash == hash
  end

  def test_that_pow_works
    trytes
    expected_trytes

    start = Time.now
    # generate the correct transaction hash
    trytes_with_pow = @pow_provider.pow(trytes, 14)
    puts "PoW time: #{(Time.now - start) * 1000.0}ms"

    assert expected_trytes == trytes_with_pow
  end
end
